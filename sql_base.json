{
  "generales": [
    {
      "pregunta": "¿Cuántos cursos existen?",
      "sql": "SELECT COUNT(*) AS cantidad FROM {PREFIX}course;"
    },
    {
      "pregunta": "¿Cuántos estudiantes hay en total?",
      "sql": "SELECT COUNT(DISTINCT u.id) AS cantidad\nFROM {PREFIX}user u\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id\nWHERE ra.roleid = 5 AND u.deleted = 0;"
    },
    {
      "pregunta": "¿Cuál es el curso con mayor cantidad de estudiantes?",
      "sql": "SELECT c.fullname, COUNT(DISTINCT u.id) AS total\nFROM {PREFIX}course c\nJOIN {PREFIX}enrol e ON c.id = e.courseid\nJOIN {PREFIX}user_enrolments ue ON ue.enrolid = e.id\nJOIN {PREFIX}user u ON u.id = ue.userid\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id\nWHERE ra.roleid = 5\nGROUP BY c.fullname\nORDER BY total DESC\nLIMIT 1;"
    },
    {
      "pregunta": "¿Cuáles son los cursos más activos por cantidad de mensajes en foros?",
      "sql": "SELECT c.fullname, COUNT(fp.id) AS mensajes\nFROM {PREFIX}forum_posts fp\nJOIN {PREFIX}forum_discussions fd ON fp.discussion = fd.id\nJOIN {PREFIX}forum f ON fd.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nGROUP BY c.fullname\nORDER BY mensajes DESC\nLIMIT 5;"
    },
    {
      "pregunta": "¿Qué estudiantes están matriculados en más de 3 cursos?",
      "sql": "SELECT u.id, u.firstname, u.lastname, COUNT(DISTINCT c.id) AS cursos\nFROM {PREFIX}user u\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.roleid = 5\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON ue.enrolid = e.id\nJOIN {PREFIX}course c ON e.courseid = c.id\nGROUP BY u.id, u.firstname, u.lastname\nHAVING cursos > 3;"
    },
    {
      "pregunta": "¿Cuáles son los cursos más pesados?",
      "sql": "SELECT c.fullname, ROUND(SUM(f.filesize) / 1024 / 1024, 2) AS tamano_mb\nFROM {PREFIX}files f\nJOIN {PREFIX}context ctx ON ctx.id = f.contextid AND ctx.contextlevel = 50\nJOIN {PREFIX}course c ON c.id = ctx.instanceid\nWHERE f.component = 'course' AND f.filesize > 0\nGROUP BY c.fullname\nORDER BY tamano_mb DESC\nLIMIT 5;"
    },
    {
      "pregunta": "¿Cuál es el momento de mayor concurrencia de la plataforma?",
      "sql": "SELECT HOUR(FROM_UNIXTIME(timecreated)) AS hora, COUNT(*) AS accesos\nFROM {PREFIX}logstore_standard_log\nGROUP BY hora\nORDER BY accesos DESC\nLIMIT 1;"
    }
  ],
  "generales_ia": [
    {
      "pregunta": "¿Hay señales de tristeza o desánimo en los foros de la plataforma? (IA)",
      "descripcion": "Analizá los mensajes recientes de toda la plataforma para detectar posibles señales de tristeza, desánimo o angustia. Resumí hallazgos con citas breves y sugerí acciones de acompañamiento, siempre como hipótesis para revisión humana.",
      "sql": "SELECT u.firstname, u.lastname, fp.message, FROM_UNIXTIME(fp.created) AS fecha, fd.name AS tema, f.name AS foro, c.fullname AS curso\nFROM {PREFIX}forum_posts fp\nJOIN {PREFIX}forum_discussions fd ON fp.discussion = fd.id\nJOIN {PREFIX}forum f ON fd.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nJOIN {PREFIX}user u ON fp.userid = u.id\nWHERE fp.created >= UNIX_TIMESTAMP(DATE_SUB(NOW(), INTERVAL 90 DAY))\nORDER BY fp.created DESC;"
    },
    {
      "pregunta": "¿Qué mensajes recientes podrían contener lenguaje ofensivo o discriminatorio? (IA)",
      "descripcion": "Detectá mensajes con posible lenguaje ofensivo o discriminatorio (insultos, hostigamiento, fanatismo). Indicá los ejemplos, explicá por qué podrían ser problemáticos y sugerí pasos de intervención respetuosos. Presentar como hipótesis a verificar por un humano.",
      "sql": "SELECT u.firstname, u.lastname, fp.message, FROM_UNIXTIME(fp.created) AS fecha, fd.name AS tema, f.name AS foro, c.fullname AS curso\nFROM {PREFIX}forum_posts fp\nJOIN {PREFIX}forum_discussions fd ON fp.discussion = fd.id\nJOIN {PREFIX}forum f ON fd.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nJOIN {PREFIX}user u ON fp.userid = u.id\nWHERE fp.created >= UNIX_TIMESTAMP(DATE_SUB(NOW(), INTERVAL 90 DAY))\nORDER BY fp.created DESC;"
    },
    {
      "pregunta": "¿Qué preguntas del foro no recibieron respuestas útiles en la plataforma? (IA)",
      "descripcion": "Identificá hilos de la plataforma donde la pregunta inicial no tenga respuestas útiles (que aclaren o propongan solución). Considerá ‘yo también’, ‘gracias’ o respuestas vacías como no útiles. Devolvé lista con autor, fecha, curso, foro/tema y breve cita.",
      "sql": "SELECT d.id AS discusion_id, u.firstname, u.lastname, fp.message, fp.parent, FROM_UNIXTIME(fp.created) AS fecha, f.name AS foro, d.name AS tema, c.fullname AS curso,\n       (SELECT COUNT(*) FROM {PREFIX}forum_posts r WHERE r.discussion = d.id AND r.parent = fp.id) AS respuestas_al_inicial\nFROM {PREFIX}forum_discussions d\nJOIN {PREFIX}forum f ON d.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nJOIN {PREFIX}forum_posts fp ON fp.discussion = d.id\nJOIN {PREFIX}user u ON fp.userid = u.id\nWHERE fp.parent = 0\nORDER BY d.id, fp.created ASC;"
    }
  ],
  "por_curso": [
    {
      "pregunta": "¿Cuántos estudiantes hay en este curso?",
      "sql": "SELECT COUNT(DISTINCT u.id) AS cantidad\nFROM {PREFIX}user u\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON e.id = ue.enrolid\nJOIN {PREFIX}course c ON e.courseid = c.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5;"
    },
    {
      "pregunta": "Mostrame la lista de estudiantes ordenada por promedio.",
      "sql": "SELECT u.id, u.firstname, u.lastname, ROUND(AVG(gg.finalgrade), 2) AS promedio\nFROM {PREFIX}user u\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON e.id = ue.enrolid\nJOIN {PREFIX}course c ON e.courseid = c.id\nJOIN {PREFIX}grade_items gi ON gi.courseid = c.id\nJOIN {PREFIX}grade_grades gg ON gg.userid = u.id AND gg.itemid = gi.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5\nGROUP BY u.id, u.firstname, u.lastname\nORDER BY promedio DESC;"
    },
    {
      "pregunta": "¿Cuál es la nota promedio de los estudiantes en este curso?",
      "sql": "SELECT ROUND(AVG(gg.finalgrade), 2) AS promedio\nFROM {PREFIX}grade_grades gg\nJOIN {PREFIX}grade_items gi ON gg.itemid = gi.id\nJOIN {PREFIX}course c ON gi.courseid = c.id\nWHERE c.fullname = __CURSO__;"
    },
    {
      "pregunta": "¿Qué estudiantes aún no han publicado en ningún foro del curso?",
      "sql": "SELECT DISTINCT u.id, u.firstname, u.lastname\nFROM {PREFIX}user u\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON ue.enrolid = e.id\nJOIN {PREFIX}course c ON e.courseid = c.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nLEFT JOIN {PREFIX}forum f ON f.course = c.id\nLEFT JOIN {PREFIX}forum_discussions fd ON fd.forum = f.id\nLEFT JOIN {PREFIX}forum_posts fp ON fp.discussion = fd.id AND fp.userid = u.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5 AND fp.id IS NULL;"
    },
    {
      "pregunta": "¿Qué porcentaje de avance tiene el curso?",
      "sql": "SELECT ROUND(100 * SUM(CASE WHEN cmc.completionstate = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0), 2) AS avance_pct\nFROM {PREFIX}course_modules cm\nJOIN {PREFIX}course c ON cm.course = c.id\nLEFT JOIN {PREFIX}course_modules_completion cmc ON cmc.coursemoduleid = cm.id\nWHERE c.fullname = __CURSO__;"
    },
    {
      "pregunta": "¿Cuándo se conectó cada estudiante por última vez?",
      "sql": "SELECT u.id, u.firstname, u.lastname, MAX(l.timecreated) AS ultima_conexion\nFROM {PREFIX}user u\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON e.id = ue.enrolid\nJOIN {PREFIX}course c ON e.courseid = c.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nLEFT JOIN {PREFIX}logstore_standard_log l ON l.userid = u.id AND l.courseid = c.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5\nGROUP BY u.id, u.firstname, u.lastname;"
    },
    {
      "pregunta": "¿Qué estudiantes llevan más de 2 semanas sin conectarse?",
      "sql": "SELECT u.id, u.firstname, u.lastname, MAX(l.timecreated) AS ultima_conexion\nFROM {PREFIX}user u\nJOIN {PREFIX}user_enrolments ue ON ue.userid = u.id\nJOIN {PREFIX}enrol e ON e.id = ue.enrolid\nJOIN {PREFIX}course c ON e.courseid = c.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nLEFT JOIN {PREFIX}logstore_standard_log l ON l.userid = u.id AND l.courseid = c.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5\nGROUP BY u.id, u.firstname, u.lastname\nHAVING MAX(l.timecreated) < UNIX_TIMESTAMP(DATE_SUB(NOW(), INTERVAL 14 DAY)) OR MAX(l.timecreated) IS NULL;"
    },
    {
      "pregunta": "¿Cuándo se conectó el docente por última vez?",
      "sql": "SELECT u.id, u.firstname, u.lastname, MAX(l.timecreated) AS ultima_conexion\nFROM {PREFIX}user u\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id\nJOIN {PREFIX}context ctx ON ctx.id = ra.contextid AND ctx.contextlevel = 50\nJOIN {PREFIX}course c ON ctx.instanceid = c.id\nLEFT JOIN {PREFIX}logstore_standard_log l ON l.userid = u.id AND l.courseid = c.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 3\nGROUP BY u.id, u.firstname, u.lastname;"
    },
    {
      "pregunta": "¿Quiénes son los docentes del curso?",
      "sql": "SELECT u.id, u.firstname, u.lastname, u.email FROM {PREFIX}user u JOIN {PREFIX}role_assignments ra ON ra.userid = u.id JOIN {PREFIX}context ctx ON ctx.id = ra.contextid AND ctx.contextlevel = 50 JOIN {PREFIX}course c ON ctx.instanceid = c.id WHERE c.fullname = __CURSO__ AND ra.roleid = 3;"
    },
    {
      "pregunta": "¿Qué alumnos son los que más veces entraron al campus?",
      "sql": "SELECT u.id, u.firstname, u.lastname, COUNT(*) AS accesos\nFROM {PREFIX}logstore_standard_log l\nJOIN {PREFIX}user u ON u.id = l.userid\nJOIN {PREFIX}course c ON l.courseid = c.id\nJOIN {PREFIX}context ctx ON ctx.instanceid = c.id AND ctx.contextlevel = 50\nJOIN {PREFIX}role_assignments ra ON ra.userid = u.id AND ra.contextid = ctx.id\nWHERE c.fullname = __CURSO__ AND ra.roleid = 5\nGROUP BY u.id, u.firstname, u.lastname\nORDER BY accesos DESC\nLIMIT 10;"
    },
    {
      "pregunta": "¿En qué horarios se conectan las personas con mayor frecuencia?",
      "sql": "SELECT HOUR(FROM_UNIXTIME(l.timecreated)) AS hora, COUNT(*) AS accesos\nFROM {PREFIX}logstore_standard_log l\nJOIN {PREFIX}course c ON c.id = l.courseid\nWHERE c.fullname = __CURSO__\nGROUP BY hora\nORDER BY accesos DESC;"
    }
  ],
  "por_curso_ia": [
    {
      "pregunta": "¿Qué expectativas tienen del curso según el foro de presentación? (IA)",
      "descripcion": "Analizá los mensajes del foro de Presentación para detectar expectativas sobre el curso (objetivos, dudas iniciales, motivaciones, temores). Resumí en bullet points con citas breves representativas. Indicá si hay temas recurrentes.",
      "sql": "SELECT u.firstname, u.lastname, fp.message, FROM_UNIXTIME(fp.created) AS fecha, d.name AS tema, f.name AS foro\nFROM {PREFIX}forum_posts fp\nJOIN {PREFIX}forum_discussions d ON fp.discussion = d.id\nJOIN {PREFIX}forum f ON d.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nJOIN {PREFIX}user u ON fp.userid = u.id\nWHERE c.fullname = __CURSO__\n  AND (LOWER(f.name) LIKE '%presentacion%' OR LOWER(f.name) LIKE '%presentación%')\nORDER BY fp.created DESC;"
    },
    {
      "pregunta": "¿Detectás prácticas poco éticas en este curso? (IA)",
      "descripcion": "Analizá si hay indicios de conductas poco éticas (pedir/compartir exámenes, plagio, suplantación, trampas, lenguaje ofensivo o discriminatorio). Señalá el/los mensajes, explicá el motivo y sugerí pasos de intervención con cautela. Devolvé hallazgos como hipótesis a revisar por un humano.",
      "sql": "SELECT u.firstname, u.lastname, fp.message, FROM_UNIXTIME(fp.created) AS fecha, d.name AS tema, f.name AS foro\nFROM {PREFIX}forum_posts fp\nJOIN {PREFIX}forum_discussions d ON fp.discussion = d.id\nJOIN {PREFIX}forum f ON d.forum = f.id\nJOIN {PREFIX}course c ON f.course = c.id\nJOIN {PREFIX}user u ON fp.userid = u.id\nWHERE c.fullname = __CURSO__\nORDER BY fp.created DESC;"
    },
    {
      "pregunta": "¿Qué mensajes del foro en este curso aún no recibieron ninguna respuesta útil? (IA)",
      "descripcion": "Analizá los mensajes del foro en este curso y detectá qué preguntas no recibieron ninguna respuesta útil. Una respuesta útil debe intentar aclarar, resolver o aportar información, no simplemente repetir la duda o decir 'yo también'. Devolvé una lista con las preguntas sin respuesta real.",
      "sql": "SELECT d.id AS discusion_id, u.firstname, u.lastname, fp.message, fp.parent FROM {PREFIX}forum_posts fp JOIN {PREFIX}forum_discussions d ON fp.discussion = d.id JOIN {PREFIX}forum f ON d.forum = f.id JOIN {PREFIX}course c ON f.course = c.id JOIN {PREFIX}user u ON fp.userid = u.id WHERE c.fullname = '__CURSO__' ORDER BY d.id, fp.created;"
    }
  ],
  "invisibles": []
}
